SELECT * FROM player;

SELECT * FROM player;

--선수 검색 : 이름, 문제에 제시된 칼럼명 

/*1. PLAYER 테이블에서 WEIGHT가 70이상이고 80이하인 선수 검색*/
SELECT PLAYER_NAME, WEIGHT FROM PLAYER 
WHERE WEIGHT BETWEEN 70 AND 80;

/*2. PLAYER 테이블에서 TEAM_ID가 'K03'이고 HEIGHT가 180 미만인 선수 검색*/
SELECT PLAYER_NAME, TEAM_ID, HEIGHT FROM PLAYER 
WHERE TEAM_ID = 'K03' AND HEIGHT < 180;

/*3. PLAYER 테이블에서 TEAM_ID가 'K06'이고 NICKNAME이 '제리'인 선수 검색*/
SELECT PLAYER_NAME, TEAM_ID, NICKNAME FROM PLAYER 
WHERE TEAM_ID = 'K06' AND NICKNAME = '제리';

/*4. PLAYER 테이블에서 HEIGHT가 170이상이고 WEIGHT가 80이상인 선수 이름 검색*/
SELECT PLAYER_NAME, HEIGHT, WEIGHT FROM PLAYER
WHERE HEIGHT >= 170 AND WEIGHT >= 80;

/*5. STADIUM 테이블에서 SEAT_COUNT가 30000초과이고 41000이하인 경기장 검색*/
SELECT STADIUM_NAME, SEAT_COUNT FROM STADIUM
WHERE SEAT_COUNT > 30000 AND SEAT_COUNT <= 41000;

/*6. PLAYER 테이블에서 TEAM_ID가 'K02'이거나 'K07'이고 포지션은 'MF'인 선수 검색*/
SELECT PLAYER_NAME, TEAM_ID, POSITION FROM PLAYER 
WHERE TEAM_ID IN('K02', 'K07') AND POSITION = 'MF';

/*7  PLAYER 테이블에서 POSITION이 NULL인 선수를 '미정'으로 변경 후 검색 */
SELECT PLAYER_NAME, NVL(POSITION, '미정') FROM PLAYER
WHERE POSITION IS NULL;

/*8. PLAYER 테이블에서 NATION이 등록되어 있으면 '등록', 아니면 '미등록'으로 검색 */
SELECT PLAYER_NAME, NVL2(NATION, '등록', '미등록') FROM PLAYER;

/*9. PLAYER_ID가 2007로 시작하는 선수들 중 POSITION별 평균 키를 조회 */
SELECT PLAYER_NAME, PLAYER_ID, POSITION, 
(SELECT AVG(HEIGHT) FROM PLAYER P2 WHERE P2.POSITION = P1.POSITION)
FROM PLAYER p1
WHERE PLAYER_ID LIKE '2007%';

/*10. PLAYER 테이블에서 몸무게가 80이상인 선수들의 평균 키가 180초과인 포지션 검색 */
SELECT POSITION FROM PLAYER P1 
WHERE 80 < (SELECT AVG(HEIGHT) FROM PLAYER P2 WHERE P1.POSITION = P2.POSITION)
GROUP BY POSITION;

/*11. EMPLOYEES 테이블에서 JOB_ID별 평균 SALARY가 10000미만인 JOB_ID 검색 
JOB_ID는 알파벳 순으로 정렬(오름차순) */
SELECT JOB_ID FROM EMPLOYEES E1
WHERE 10000 > (SELECT AVG(SALARY) FROM EMPLOYEES E2 WHERE E1.JOB_ID = E2.JOB_ID) 
ORDER BY JOB_ID;


/*
 *12. 포지션이 MF인 선수들의 
 * 입단연도 별 평균 몸무게, 평균 키를 구한다.
 * 칼럼명은 입단연도, 평균 몸무게, 평균 키 로 표시한다.
 * 입단연도를 오름차순으로 정렬한다.
 * 단, 평균 몸무게는 70 이상 그리고 평균 키는 160 이상인 입단연도만 조회
 */
SELECT JOIN_YYYY 입단연도, AVG(WEIGHT) "평균 몸무게", AVG(HEIGHT) "평균 키" FROM PLAYER 
WHERE POSITION = 'MF'
GROUP BY JOIN_YYYY HAVING AVG(WEIGHT) >= 70 AND AVG(HEIGHT ) >= 160
ORDER BY JOIN_YYYY;

/*13. PLAYER 테이블에서 평균 몸무게보다 더 많이 나가는 선수들 검색 */
SELECT PLAYER_NAME, WEIGHT FROM PLAYER 
WHERE WEIGHT > (SELECT AVG(WEIGHT) FROM PLAYER);

/*14. PLAYER 테이블에서 정남일 선수가 소속된 팀의 선수들 조회*/
SELECT PLAYER_NAME, TEAM_ID FROM PLAYER 
WHERE TEAM_ID IN(SELECT TEAM_ID FROM PLAYER WHERE PLAYER_NAME = '정남일');

/*15. SCHEDULE 테이블에서 경기 일정이 20120501 ~ 20120502 사이에 있는 경기장 전체 정보 조회*/
SELECT ST.*, SC.SCHE_DATE  
FROM STADIUM ST JOIN SCHEDULE SC
ON ST.STADIUM_ID = SC.STADIUM_ID 
--WHERE TO_DATE(SC.SCHE_DATE, 'YYYYMMDD') BETWEEN TO_DATE('2012-05-01', 'YYYY-MM-DD') AND TO_DATE('2012-05-02', 'YYYY-MM-DD');
WHERE SC.SCHE_DATE BETWEEN '20120501' AND '20120502';


-- STADIUM_ID와 비교하는 대상이 여러개인 경우 OR 연산자로 비교해야 하는데 모든 경우의 수를 OR로 작성하는 것이 불가능ㅅ하다 
-- 이럴 경우 IN을 사용한다 

SELECT *  
FROM STADIUM 
WHERE STADIUM_ID IN (SELECT STADIUM_ID FROM SCHEDULE WHERE SCHE_DATE >= '20120501' AND SCHE_DATE <= '20120502');